#!/usr/bin/env python3

import os
import configparser
import pickle
import argparse
import sys
import curses

from recordtools import record
from recordtools import recordclient

if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog = "lect")
    parser.add_argument("animation" , help = "Path to output file for animation.")
    parser.add_argument("audio" , help = "Path to file to save audio data.")
    parser.add_argument("-r" , "--run" , help = "Calculate and save the output without gui." , action = "store_true")
    parser.add_argument("-l" , "--load" , help = "Path to file with saved lect data.")
    parser.add_argument("-s" , "--save" , help = "Path to file to save lect data.")
    parser.add_argument("-p" , "--printout" , help = "Path to directory for printout." , default = None)
    parser.add_argument("-c" , "--config" , help = "Path to configuration file." , default = None)
    args = parser.parse_args()

    LECT_DIRECTORY = os.path.dirname(os.path.realpath(__file__))

    if args.run:
        rec = None

        if args.load is not None:
            with open(args.load , "rb") as f:
                rec = pickle.load(f)
        else:
            sys.stderr.write("No file to load record.\n")
            sys.exit(1)

        if args.printout is None:
            sys.stderr.write("No printout file.\n")
            sys.exit(1)

        record_client = recordclient.RecordClient(args.animation , args.audio , rec ,
                                                  gui = False ,
                                                  dark_pallete = "default_pallete" ,
                                                  light_pallete = "light_pallete" ,
                                                  printout = args.printout)

        record_client.calculate_save()

    else:
        rec = None

        if args.load is not None:
            with open(args.load , "rb") as f:
                rec = pickle.load(f)

        else:

            config = configparser.ConfigParser()
            config.read(os.path.join(LECT_DIRECTORY , "config"))
            if args.config is not None:
                config.read(args.config)

            rec = record.Record(config ,
                                dark_pallete = "default_pallete" ,
                                light_pallete = "light_pallete")

            record_client = None

        try:
            record_client = recordclient.RecordClient(args.animation , args.audio , rec ,
                                                      dark_pallete = "default_pallete" ,
                                                      light_pallete = "light_pallete" ,
                                                      printout = args.printout , pickle_path = args.save)
            record_client.run()

        finally:

            curses.reset_shell_mode()
            curses.endwin()
            
            record_client.clean()

            if args.save is not None:
                with open(args.save , "wb") as f:
                    pickle.dump(rec , f)
            
