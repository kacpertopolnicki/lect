#!/usr/bin/env python3

import os
import configparser
import record
import recordclient
import pickle
import argparse
import curses

if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog = "lect")
    parser.add_argument("animation" , help = "Path to output file for animation.")
    parser.add_argument("audio" , help = "Path to file to save audio data.")
    parser.add_argument("-l" , "--load" , help = "Path to file with saved lect data.")
    parser.add_argument("-s" , "--save" , help = "Path to file to save lect data.")
    parser.add_argument("-p" , "--printout" , help = "Path to directory for printout." , default = None)
    parser.add_argument("-c" , "--config" , help = "Path to configuration file." , default = None)
    args = parser.parse_args()

    rec = None

    if args.load is not None:
        with open(args.load , "rb") as f:
            rec = pickle.load(f)

    else:

        LECT_DIRECTORY = os.path.dirname(os.path.realpath(__file__))

        config = configparser.ConfigParser()
        config.read(os.path.join(LECT_DIRECTORY , "config"))
        if args.config is not None:
            config.read(args.config)

        rec = record.Record(config ,
                            dark_pallete = "default_pallete" ,
                            light_pallete = "light_pallete")

    try:
        record_client = recordclient.RecordClient(args.animation , args.audio , rec ,
                                                  dark_pallete = "default_pallete" ,
                                                  light_pallete = "light_pallete" ,
                                                  printout = args.printout , pickle_path = args.save)
        record_client.run()

    finally:

        record_client.clean()

        if args.save is not None:
            with open(args.save , "wb") as f:
                pickle.dump(rec , f)
        
        curses.reset_shell_mode()
        #curses.echo()
        curses.endwin()
        #curses.nocbreak()
